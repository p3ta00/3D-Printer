# This file contains common pin mappings for the BIGTREETECH Manta M5P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
#M1
step_pin: PC8
dir_pin: !PC9
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
endstop_pin: ^PD3
position_endstop: 2
position_max: 305
position_min: -10
homing_speed: 50


[stepper_y]
#M2
step_pin: PA10
dir_pin: PA14
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: ^PD2
position_endstop: 0
position_max: 305
homing_speed: 50

[stepper_z]
#M3
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 405
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[stepper_z1]
#M5
step_pin: PB0
dir_pin: PB1
enable_pin: !PC4
microsteps: 16
rotation_distance: 8


[extruder]
#M4
step_pin: PB12
dir_pin: !PB11
enable_pin: !PA8
microsteps: 16
rotation_distance: 7.67
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
control: pid
pid_Kp: 22.57
pid_Ki: 1.72
pid_Kd: 73.96
min_temp: 0
max_temp: 315
max_extrude_cross_section: 50.0

#sensor_type:MAX31865
#sensor_pin: PA4
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2

#[filament_switch_sensor material_0]
#switch_pin: PC2

#[extruder1]
#step_pin: PB0
#dir_pin: PB1
#enable_pin: !PC4
#heater_pin: PA7
#sensor_pin: PA2
#...

[heater_bed]
heater_pin: PA5
sensor_type: Generic 3950
sensor_pin: PA0
control: watermark
min_temp: 0
max_temp: 90

[fan]
pin: PA4

[heater_fan hotend_fan]
pin: PA3
max_power: 1.0
fan_speed: 1
kick_start_time: 0
heater: extruder
heater_temp: 50.0

[safe_z_home]
home_xy_position: 150, 150 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 40, 30
mesh_max: 290, 280
probe_count: 6,6
fade_start: 1.0
fade_end: 10.0

########################################
# MACRO Auto Bed Level
########################################

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1
 G1 X0 Y0 Z5 F4000

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}


#[heater_fan SoC_fan]
#pin: CB1: gpio79
#pin: RPI: gpio26

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_m5p-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1500
max_z_velocity: 5
max_z_accel: 100


########################################
# CURA
########################################
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    ;Put printing message on LCD screen
    M117 Heating..
    M140 S{BED_TEMP} ; set bed temp

    G28 X Y; Home X Y
    M190 S{BED_TEMP} ; wait for bed temp
    G28 Z ; Home Z

    ; Auto Leveling
    BED_MESH_CALIBRATE

    G1 X0 Y0 Z10 F5000.0 ; move to start-line position

    M104 S{EXTRUDER_TEMP} ; set extruder temp
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    
    M117 Priming
    ; Start of print
    G21; metric values
    G90 ; absolute positioning
    M82; set extruder to absolute mode

    ; now print a line of filament to prepare extrusion
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    G1 X0.1 Y20 Z0.3 F5000.0  ; move to start-line position
    G1 X0.1 Y100.0 Z0.3 F500.0 E15  ; draw 1st line
    G1 X0.4 Y100.0 Z0.3 F5000.0  ; move to side a little
    G1 X0.4 Y20 Z0.3 F500.0 E30  ; draw 2nd line
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface

    ;Tuning params
    ;Put printing message on LCD screen
    M117 Printing...
    ; Start of actual GCode for the print

[gcode_macro END_PRINT]
gcode:
    M117 Done printing :)
    # move z up
    G91
    G1 E-3 Z+10 F3000
    # absolute xy 
    G90
    G1 X10 Y220 F2000
    #disable hotend and heated bed
    M104 S0
    M140 S0
    # disable steppers
    M84
    BED_MESH_CLEAR



########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PD9
run_current: 0.800
diag_pin: PD3
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD8
run_current: .7
diag_pin: PD2
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PB10
run_current: 0.800
diag_pin: PC3
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PB2
run_current: 0.600
diag_pin: PC2
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: PA6
run_current: 0.800
diag_pin:
stealthchop_threshold: 999999

########################################
# Other Configurations
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD5, EXP1_3=PB3, EXP1_5=PB5, EXP1_7=PB7, EXP1_9=<GND>,
    EXP1_2=PD4,  EXP1_4=PD6, EXP1_6=PB4, EXP1_8=PB6, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB8, EXP2_5=PC10, EXP2_7=PC12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB9, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[bltouch]
sensor_pin: PC13
control_pin: PC15
x_offset: 36
y_offset: -2.0
#z_offset: 0
pin_move_time: 0.4
speed: 20

# Proximity switch
#[probe]
#pin: PC15

#[neopixel my_neopixel1]
#pin: PC11

#[neopixel my_neopixel2]
#pin: PC14

#[adxl345]
#cs_pin: PC0
#spi_bus: spi2

############# Mainsail

## Mainsail klipper macro definitions
##
## Copyright (C) 2022 Alex Zellner <alexander.zellner@googlemail.com>
##
## This file may be distributed under the terms of the GNU GPLv3 license

## add [include mainsail.cfg] to your printer.cfg

## Customization:
## copy the following macro to your printer.cfg (outside of mainsail.cfg)

#[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos  : False ; use custom park coordinates for x,y [True/False] 
#variable_custom_park_x   : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y   : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz  : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position 
#variable_retract         : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract  : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract   : 35.0  ; retract speed in mm/s
#variable_unretract       : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract : 35.0  ; unretract speed in mm/s
#variable_speed_hop       : 15.0  ; z move speed in mm/s
#variable_speed_move      : 100.0 ; move speed in mm/s
#variable_park_at_cancel  : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False] 
#gcode:

## After you uncomment it add your custom values

## You now can use your PAUSE macro direct in your M600 here a short example:

#[gcode_macro M600]
#description: Filament change
#gcode: PAUSE X=10 Y=10 Z_MIN=50

## That will park your head front left with a minimum height of 50mm above the bed. If your head
## is already above 50mm it will use only the z_hop specified with dz.

########################################
# SD Card
########################################
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

########################################
# MACRO Cancel Print
########################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set allow_park = False if not macro_found
                 else False if client.park_at_cancel is not defined
                 else True  if client.park_at_cancel|lower == 'true'
                 else False %}
  {% set retract      = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  ##### end of definitions #####
  {% if not printer.pause_resume.is_paused and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {% endif %}
  {% if printer.extruder.can_extrude %}
    M83
    G1 E-{retract} F{sp_retract}
    {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE

########################################
# MACRO Pause
########################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
########################################
# MACRO RESUME
########################################

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %} 
  {% set unretract      = 1.0  if not macro_found else client.unretract|default(1.0)|abs %}
  {% set sp_unretract   = 2100 if not macro_found else client.speed_unretract|default(35) * 60 %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G11
    {% else %}
      M83
      G1 E{unretract} F{sp_unretract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough %s" % use_fw_retract)}
  {% endif %}  
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}  

########################################
# MACRO Cancel
########################################
[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true' 
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}
  {% set retract      = 1.0  if not macro_found else client.retract|default(1.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  {% set sp_hop       = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move      = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set act = printer.toolhead.position %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set cone = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch'] 
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, max.z]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed 
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G10
    {% else %}
      M83
      G1 E-{retract} F{sp_retract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.055
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.032500, 0.050000, 0.090000, 0.100000, 0.037500, -0.017500
#*# 	  -0.027500, 0.002500, 0.030000, 0.037500, -0.025000, -0.080000
#*# 	  -0.020000, 0.025000, 0.052500, 0.072500, -0.002500, -0.062500
#*# 	  -0.027500, 0.030000, 0.070000, 0.102500, 0.045000, -0.005000
#*# 	  -0.045000, 0.005000, 0.037500, 0.067500, 0.020000, -0.015000
#*# 	  -0.022500, -0.005000, 0.010000, 0.035000, -0.017500, -0.062500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 290.0
#*# min_y = 30.0
#*# max_y = 280.0
#*#
#*# [bed_mesh p1]
#*# version = 1
#*# points =
#*# 	0.025000, 0.015000, 0.052500, 0.160000, 0.235000, 0.307500
#*# 	-0.135000, -0.120000, 0.015000, 0.097500, 0.082500, 0.160000
#*# 	-0.145000, -0.125000, -0.025000, 0.030000, 0.077500, 0.135000
#*# 	-0.087500, -0.127500, -0.097500, -0.022500, 0.030000, 0.117500
#*# 	-0.047500, -0.060000, 0.045000, 0.047500, 0.080000, 0.087500
#*# 	0.125000, 0.032500, 0.137500, 0.062500, 0.052500, 0.112500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 290.0
#*# min_y = 30.0
#*# max_y = 280.0
